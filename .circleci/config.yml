version: 2.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.11
    resource_class: small
    steps:
      - checkout # fetches your source code over SSH to the configured path
      - restore_cache: # restores a previously saved cache
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Initialize venv / Install deps
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
      - run:
          name: Run coverage tests
          command: |
            . venv/bin/activate
            pytest --cov=.
            coverage report --fail-under=80

      - run:
          name: Linting
          command: |
            . venv/bin/activate
            flake8
  
  containerize:
    docker:
      - image: cimg/python:3.10.11
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Containerize
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USER --password-stdin
            VERSION=$CIRCLE_SHA1
            TAG="$DOCKER_REPO:$VERSION"
            LATEST="${DOCKER_REPO}:latest"
            BUILD_TIMESTAMP=$( date '+%F_%H:%M:%S' )
            docker build -t "$TAG" -t "$LATEST" --build-arg VERSION="$VERSION" --build-arg BUILD_TIMESTAMP="$BUILD_TIMESTAMP" .
            docker push "$TAG" 
            docker push "$LATEST"
  
  deploy:
    docker:
      - image: $LATEST
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  main:
    jobs:
      - build-and-test
      - containerize:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build-and-test
            - containerize
          filters:
            branches:
              only:
                - master

